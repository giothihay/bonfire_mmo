// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


class PlayerPosition {
  PlayerPosition._(this._bc, this._bcOffset);
  factory PlayerPosition(List<int> bytes) {
    fb.BufferContext rootRef = new fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<PlayerPosition> reader = const _PlayerPositionReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get playerId => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 4, 0);
  double get x => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 6, 0.0);
  double get y => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 8, 0.0);
  String get direction => const fb.StringReader().vTableGet(_bc, _bcOffset, 10, null);
  String get time => const fb.StringReader().vTableGet(_bc, _bcOffset, 12, null);

  @override
  String toString() {
    return 'PlayerPosition{playerId: $playerId, x: $x, y: $y, direction: $direction, time: $time}';
  }
}

class _PlayerPositionReader extends fb.TableReader<PlayerPosition> {
  const _PlayerPositionReader();

  @override
  PlayerPosition createObject(fb.BufferContext bc, int offset) => 
    new PlayerPosition._(bc, offset);
}

class PlayerPositionBuilder {
  PlayerPositionBuilder(this.fbBuilder) {
    assert(fbBuilder != null);
  }

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable();
  }

  int addPlayerId(int playerId) {
    fbBuilder.addInt32(0, playerId);
    return fbBuilder.offset;
  }
  int addX(double x) {
    fbBuilder.addFloat64(1, x);
    return fbBuilder.offset;
  }
  int addY(double y) {
    fbBuilder.addFloat64(2, y);
    return fbBuilder.offset;
  }
  int addDirectionOffset(int offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addTimeOffset(int offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class PlayerPositionObjectBuilder extends fb.ObjectBuilder {
  final int _playerId;
  final double _x;
  final double _y;
  final String _direction;
  final String _time;

  PlayerPositionObjectBuilder({
    int playerId,
    double x,
    double y,
    String direction,
    String time,
  })
      : _playerId = playerId,
        _x = x,
        _y = y,
        _direction = direction,
        _time = time;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(
    fb.Builder fbBuilder) {
    assert(fbBuilder != null);
    final int directionOffset = fbBuilder.writeString(_direction);
    final int timeOffset = fbBuilder.writeString(_time);

    fbBuilder.startTable();
    fbBuilder.addInt32(0, _playerId);
    fbBuilder.addFloat64(1, _x);
    fbBuilder.addFloat64(2, _y);
    if (directionOffset != null) {
      fbBuilder.addOffset(3, directionOffset);
    }
    if (timeOffset != null) {
      fbBuilder.addOffset(4, timeOffset);
    }
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String fileIdentifier]) {
    fb.Builder fbBuilder = new fb.Builder();
    int offset = finish(fbBuilder);
    return fbBuilder.finish(offset, fileIdentifier);
  }
}
